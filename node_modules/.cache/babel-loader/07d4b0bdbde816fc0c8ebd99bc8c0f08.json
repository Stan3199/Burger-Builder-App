{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Piyus\\\\burger-build\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nconst INGREDIENT_PRICES = {\n  salad: 10,\n  cheese: 20,\n  bacon: 30,\n  meat: 40\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 0,\n      purchasable: false,\n      purchasing: false\n    };\n\n    this.addingredientHandler = type => {\n      // const oldCount=this.state.ingredients[type];\n      // const updatedCount=oldCount+1;\n      const updatedIngredient = { ...this.state.ingredients\n      };\n      updatedIngredient[type] += 1; // updatedIngredient[type]=updatedCount;\n\n      this.setState({\n        ingredients: updatedIngredient\n      }); // const priceAddition=INGREDIENT_PRICES[type];\n      // const oldPrice=this.state.totalPrice;\n      // const newPrice=oldPrice+priceAddition;\n\n      this.setState({\n        totalPrice: this.state.totalPrice + INGREDIENT_PRICES[type]\n      });\n      this.updatePurchaseState(updatedIngredient);\n    };\n\n    this.removeIngredientHandler = type => {\n      if (this.state.ingredients[type] === 0) {\n        return;\n      }\n\n      const upgradedIngredient = { ...this.state.ingredients\n      };\n      upgradedIngredient[type] -= 1;\n      this.setState({\n        ingredients: upgradedIngredient\n      });\n      this.setState({\n        totalPrice: this.state.totalPrice - INGREDIENT_PRICES[type]\n      });\n      this.updatePurchaseState(upgradedIngredient);\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState;\n    };\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igkey => {\n      return ingredients[igkey];\n    }).reduce((sum, el) => sum += el, 0);\n    this.setState({\n      purchasable: sum > 0\n    });\n  }\n\n  render() {\n    const disableInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disableInfo) {\n      disableInfo[key] = disableInfo[key] <= 0;\n    }\n\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.purchasing,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(OrderSummary, {\n      ingredients: this.state.ingredients,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(BuildControls, {\n      ingredientAdded: this.addingredientHandler,\n      ingredientRemoved: this.removeIngredientHandler,\n      disabled: disableInfo,\n      purchasable: this.state.purchasable,\n      price: this.state.totalPrice,\n      ordered: this.purchaseHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["C:/Users/Piyus/burger-build/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","INGREDIENT_PRICES","salad","cheese","bacon","meat","BurgerBuilder","state","ingredients","totalPrice","purchasable","purchasing","addingredientHandler","type","updatedIngredient","setState","updatePurchaseState","removeIngredientHandler","upgradedIngredient","purchaseHandler","purchaseCancelHandler","sum","Object","keys","map","igkey","reduce","el","render","disableInfo","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Aux from '../../hoc/Aux';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\r\n\r\nconst INGREDIENT_PRICES={\r\n    salad:10,\r\n    cheese:20,\r\n    bacon:30,\r\n    meat:40\r\n}\r\n\r\nclass BurgerBuilder extends Component{\r\n    // constructor(props){\r\n    //     super(props);\r\n    //     this.state={}\r\n    // }\r\n    state={\r\n        ingredients:{\r\n            salad:0,\r\n            bacon:0,\r\n            cheese:0,\r\n            meat:0\r\n        },\r\n        totalPrice:0,\r\n        purchasable:false,\r\n        purchasing:false\r\n    }\r\n\r\n    addingredientHandler =(type)=>{\r\n        // const oldCount=this.state.ingredients[type];\r\n        // const updatedCount=oldCount+1;\r\n        const updatedIngredient={\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredient[type]+=1;\r\n        // updatedIngredient[type]=updatedCount;\r\n        this.setState({ingredients:updatedIngredient});\r\n\r\n        // const priceAddition=INGREDIENT_PRICES[type];\r\n        // const oldPrice=this.state.totalPrice;\r\n        // const newPrice=oldPrice+priceAddition;\r\n        this.setState({totalPrice:this.state.totalPrice+INGREDIENT_PRICES[type]});\r\n\r\n        this.updatePurchaseState(updatedIngredient)\r\n    }\r\n\r\n    removeIngredientHandler=(type)=>{\r\n        if(this.state.ingredients[type]===0) {return;}\r\n        const upgradedIngredient={\r\n            ...this.state.ingredients\r\n        }\r\n        upgradedIngredient[type]-=1;\r\n        this.setState({ingredients:upgradedIngredient});\r\n        this.setState({totalPrice:this.state.totalPrice-INGREDIENT_PRICES[type]})\r\n        this.updatePurchaseState(upgradedIngredient);\r\n    }\r\n\r\n    updatePurchaseState(ingredients){\r\n       \r\n        const sum=Object.keys(ingredients)\r\n        .map(igkey=>{\r\n            return ingredients[igkey]\r\n        })\r\n        .reduce((sum,el)=>(\r\n            sum+=el\r\n        ),0)\r\n        this.setState({purchasable:sum>0});\r\n    }\r\n\r\n    purchaseHandler=()=>{\r\n        this.setState({purchasing:true});\r\n    }\r\n\r\n    purchaseCancelHandler=()=>{\r\n        this.setState\r\n    }\r\n\r\n    render(){\r\n        const disableInfo={\r\n            ...this.state.ingredients\r\n        };\r\n        for(let key in disableInfo){\r\n            disableInfo[key]=disableInfo[key]<=0;\r\n        } \r\n        return(\r\n            <Aux>\r\n            <Modal show={this.state.purchasing}>\r\n                <OrderSummary ingredients={this.state.ingredients}/>\r\n            </Modal>\r\n                <Burger ingredients={this.state.ingredients}></Burger>\r\n                <BuildControls \r\n                    ingredientAdded={this.addingredientHandler}\r\n                    ingredientRemoved={this.removeIngredientHandler}\r\n                    disabled={disableInfo}\r\n                    purchasable={this.state.purchasable}\r\n                    price={this.state.totalPrice}\r\n                    ordered={this.purchaseHandler}\r\n                />\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}